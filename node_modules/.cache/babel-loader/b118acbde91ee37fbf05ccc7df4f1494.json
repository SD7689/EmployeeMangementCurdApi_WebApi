{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shiv\\\\employeemanagement-project\\\\src\\\\components\\\\EditEmployee.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/SnackBar';\nimport IconButton from '@material-ui/core/IconButton';\nexport class EditEmployee extends Component {\n  constructor(props) {\n    super(props);\n\n    this.snackbarClose = event => {\n      this.setState({\n        snackbaropen: false\n      });\n    };\n\n    this.state = {\n      snackbaropen: false,\n      snackbarmsg: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('https://localhost:44369//api/Employee/UpdateEmployee', {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        EmployeeId: event.target.EmployeeId.value,\n        FullName: event.target.FullName.value,\n        Email: event.target.Email.value,\n        Password: event.target.Password.value,\n        Mobile: event.target.Mobile.value,\n        Address: event.target.Email.value\n      })\n    }).then(res => res.json()).then(result => {\n      // alert(result);\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: result\n      });\n    }, error => {\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: 'failed'\n      }); //alert('Failed')\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'center',\n        horizontal: 'center'\n      },\n      open: this.state.snackbaropen,\n      autoHideDuration: 3000,\n      onClose: this.snackbarClose,\n      message: /*#__PURE__*/React.createElement(\"span\", {\n        id: \"message-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 26\n        }\n      }, this.state.snackbarmsg),\n      action: [/*#__PURE__*/React.createElement(IconButton, {\n        key: \"close\",\n        \"arial-label\": \"close\",\n        color: \"inherit\",\n        onClick: this.snackbarClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, \"x\")],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal, Object.assign({}, this.props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"Edit Employee\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"EmployeeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    }, \"EmployeeId\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"EmployeeId\",\n      required: true,\n      disabled: true,\n      defaultValue: this.props.empid,\n      placeholder: \"EmployeeId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"FullName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }, \"FullName\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"FullName\",\n      required: true,\n      defaultValue: this.props.empname,\n      placeholder: \"FullName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, \"Email Id\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"Email\",\n      required: true,\n      defaultValue: this.props.empEmail,\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"Password\",\n      required: true,\n      defaultValue: this.props.empPass,\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Mobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, \"Mobile no.\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"Mobile\",\n      required: true,\n      defaultValue: this.props.empMob,\n      placeholder: \"Mobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"Address\",\n      required: true,\n      defaultValue: this.props.empAdd,\n      placeholder: \"Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, \"Edit Employee\")))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, \"Close\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Shiv/employeemanagement-project/src/components/EditEmployee.js"],"names":["React","Component","Modal","Button","Row","Col","Form","Snackbar","IconButton","EditEmployee","constructor","props","snackbarClose","event","setState","snackbaropen","state","snackbarmsg","handleSubmit","bind","preventDefault","fetch","method","headers","body","JSON","stringify","EmployeeId","target","value","FullName","Email","Password","Mobile","Address","then","res","json","result","error","render","vertical","horizontal","empid","empname","empEmail","empPass","empMob","empAdd","onHide"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport Snackbar from '@material-ui/core/SnackBar';\r\nimport IconButton from '@material-ui/core/IconButton'; \r\n\r\nexport class EditEmployee extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {snackbaropen: false,snackbarmsg:''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) =>\r\n    {\r\n        this.setState({snackbaropen:false});\r\n    };\r\n\r\n    handleSubmit(event)\r\n    {\r\n        event.preventDefault();\r\n        fetch('https://localhost:44369//api/Employee/UpdateEmployee',\r\n        {\r\n            method:'PUT',\r\n            headers:\r\n            {\r\n                'Accept': 'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify\r\n            ({\r\n                EmployeeId:event.target.EmployeeId.value,\r\n                FullName: event.target.FullName.value,\r\n                Email: event.target.Email.value,\r\n                Password:event.target.Password.value,\r\n                Mobile:event.target.Mobile.value,\r\n                Address:event.target.Email.value\r\n            })\r\n        })\r\n        .then(res=> res.json())\r\n        .then((result)=>\r\n        {\r\n           // alert(result);\r\n           this.setState({snackbaropen:true, snackbarmsg:result});\r\n        },\r\n        (error)=>\r\n        {\r\n           this.setState({snackbaropen:true, snackbarmsg:'failed'})\r\n            //alert('Failed')\r\n        }\r\n        )\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"container\">\r\n                <Snackbar \r\n                anchorOrigin={{vertical:'center',horizontal:'center'}}\r\n                open = {this.state.snackbaropen}\r\n                autoHideDuration = {3000}\r\n                onClose={this.snackbarClose}\r\n                message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                action={[\r\n                        <IconButton\r\n                        key=\"close\"\r\n                        arial-label=\"close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.snackbarClose}\r\n                        >\r\n                        x\r\n                        </IconButton>\r\n                       ]}\r\n                />\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Edit Employee\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId=\"EmployeeId\">\r\n                                        <Form.Label>EmployeeId</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"EmployeeId\"\r\n                                            required\r\n                                            disabled\r\n                                            defaultValue = {this.props.empid}\r\n                                            placeholder=\"EmployeeId\"\r\n                                        />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"FullName\">\r\n                                    <Form.Label>FullName</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"FullName\"\r\n                                            required\r\n                                            defaultValue = {this.props.empname}\r\n                                            placeholder=\"FullName\"\r\n                                        />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Email\">\r\n                                    <Form.Label>Email Id</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Email\"\r\n                                            required\r\n                                            defaultValue = {this.props.empEmail}\r\n                                            placeholder=\"Email\"\r\n                                        />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Password\"\r\n                                            required\r\n                                            defaultValue = {this.props.empPass}\r\n                                            placeholder=\"Password\"\r\n                                        />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Mobile\">\r\n                                    <Form.Label>Mobile no.</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Mobile\"\r\n                                            required\r\n                                            defaultValue = {this.props.empMob}\r\n                                            placeholder=\"Mobile\"\r\n                                        />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Address\">\r\n                                    <Form.Label>Address</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"Address\"\r\n                                            required\r\n                                            defaultValue = {this.props.empAdd}\r\n                                            placeholder=\"Address\"\r\n                                        />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                    Edit Employee\r\n                                    </Button>   \r\n                                </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}