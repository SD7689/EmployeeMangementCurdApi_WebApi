{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shiv\\\\employeemanagement-project\\\\src\\\\components\\\\Employee.js\";\nimport React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport { AddEmployee } from './AddEmployee';\nimport { EditEmployee } from './EditEmployee';\nexport class Employee extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emps: [],\n      addModalShow: false,\n      editModalShow: false\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  refreshList() {\n    fetch('https://localhost:44369//api/Employee/GetAllEmployee').then(Response => Response.json()).then(data => {\n      this.setState({\n        emps: data\n      });\n    });\n  } //state or property get changed will refresh the list\n\n\n  componentDidUpdate() {\n    this.refreshList();\n  }\n\n  render() {\n    const {\n      emps,\n      empid,\n      empname,\n      empEmail,\n      empPass,\n      empMob,\n      empAdd\n    } = this.state;\n\n    let addModalClose = () => this.setState({\n      addModalShow: false\n    });\n\n    let editModalClose = () => this.setState({\n      editModalShow: false\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ButtonToolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        addModalShow: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Add Employee\"), /*#__PURE__*/React.createElement(AddEmployee, {\n      show: this.state.addModalShow,\n      onHide: addModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Table, {\n      className: \"mt-4\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"EmployeeId\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"FullName\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Mobile\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, emps.map(emp => /*#__PURE__*/React.createElement(\"tr\", {\n      key: emp.EmployeeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \" \", emp.EmployeeId), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, \" \", emp.FullName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \" \", emp.Email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \" \", emp.Password), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \" \", emp.Mobile), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \" \", emp.Address), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ButtonToolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-2\",\n      variant: \"primary\",\n      onClick: () => this.setState({\n        editModalShow: true,\n        empid: emps.EmployeeId,\n        empname: emps.FullName,\n        empEmail: emps.Email,\n        empPass: emps.Password,\n        empMob: emps.Mobile,\n        empAdd: emps.Address\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(EditEmployee, {\n      show: this.state.editModalShow,\n      onHide: editModalClose,\n      empid: empid,\n      empname: empname,\n      empEmail: empEmail,\n      empPass: empPass,\n      empMob: empMob,\n      empAdd: empAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Shiv/employeemanagement-project/src/components/Employee.js"],"names":["React","Component","Table","Button","ButtonToolbar","AddEmployee","EditEmployee","Employee","constructor","props","state","emps","addModalShow","editModalShow","componentDidMount","refreshList","fetch","then","Response","json","data","setState","componentDidUpdate","render","empid","empname","empEmail","empPass","empMob","empAdd","addModalClose","editModalClose","map","emp","EmployeeId","FullName","Email","Password","Mobile","Address"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {Button, ButtonToolbar} from 'react-bootstrap';\r\nimport {AddEmployee} from './AddEmployee';\r\nimport {EditEmployee} from './EditEmployee';\r\n\r\nexport class Employee extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={emps:[], addModalShow : false, editModalShow : false}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList(){\r\n        fetch('https://localhost:44369//api/Employee/GetAllEmployee')\r\n        .then(Response=> Response.json())\r\n        .then(data => {\r\n        this.setState({emps:data});\r\n        }\r\n        );\r\n    }\r\n//state or property get changed will refresh the list\r\n    componentDidUpdate(){\r\n        this.refreshList();\r\n    }\r\n\r\n    render(){\r\n        const {emps , empid, empname, empEmail, empPass, empMob, empAdd} = this.state;\r\n        let addModalClose =() => this.setState({addModalShow:false});\r\n        let editModalClose =() => this.setState({editModalShow:false});\r\n        return(\r\n\r\n            <div>\r\n            <ButtonToolbar>\r\n                <Button variant=\"primary\" onClick={()=> this.setState({addModalShow:true})}>\r\n                Add Employee\r\n                </Button>\r\n\r\n                <AddEmployee\r\n                show={this.state.addModalShow}\r\n                onHide={addModalClose}\r\n                />\r\n\r\n            </ButtonToolbar>\r\n            <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>EmployeeId</th>\r\n                        <th>FullName</th>\r\n                        <th>Email</th>\r\n                        <th>Password</th>\r\n                        <th>Mobile</th>\r\n                        <th>Address</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {emps.map(emp=>\r\n                        <tr key={emp.EmployeeId}>\r\n                        <td> {emp.EmployeeId}</td>\r\n                        <td> {emp.FullName}</td>\r\n                        <td> {emp.Email}</td>\r\n                        <td> {emp.Password}</td>\r\n                        <td> {emp.Mobile}</td>\r\n                        <td> {emp.Address}</td>\r\n                        <td>\r\n                            <ButtonToolbar>\r\n                        <Button\r\n                        className=\"mr-2\" variant=\"primary\"\r\n                        onClick={()=> this.setState({editModalShow:true,empid:emps.EmployeeId, empname:emps.FullName, empEmail:emps.Email, empPass:emps.Password, empMob:emps.Mobile, empAdd:emps.Address})}\r\n                        >Edit\r\n                        </Button>\r\n\r\n                        <EditEmployee\r\n                        show = {this.state.editModalShow}\r\n                        onHide={editModalClose}\r\n                        empid = {empid}\r\n                        empname = {empname}\r\n                        empEmail = {empEmail}\r\n                        empPass = {empPass}\r\n                        empMob = {empMob}\r\n                        empAdd = {empAdd}\r\n                        />\r\n                        </ButtonToolbar>\r\n                        </td>\r\n                        \r\n                        </tr>\r\n                        )}\r\n                </tbody>\r\n            </Table>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}